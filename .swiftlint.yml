disabled_rules: # rule identifiers to exclude from running
  - identifier_name
  - nesting
  - function_parameter_count
  - cyclomatic_complexity
  - type_body_length

opt_in_rules: # some rules are turned off by default, so you need to opt-in
  - empty_count # Find all the available rules by running: `swiftlint rules`
  - empty_string
  - empty_collection_literal
  - explicit_init
  - closure_spacing
  - unused_closure_parameter
  - redundant_nil_coalescing
  - discouraged_direct_init
  - private_outlet
  - operator_usage_whitespace
  - closure_end_indentation
  - first_where
  - prohibited_super_call
  - vertical_parameter_alignment_on_call
  - unneeded_parentheses_in_closure_argument
  - extension_access_modifier
  - pattern_matching_keywords
  - array_init
  - literal_expression_end_indentation
  - joined_default_parameter
  - contains_over_first_not_nil
  - override_in_extension
  - private_action
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - single_test_class
  - yoda_condition

analyzer_rules: # Rules run by `swiftlint analyze`
  - explicit_self
  - unused_import
  - unused_declaration

included: # paths to include during linting. `--path` is ignored if present.
  - SwiftUI-MVVM-Boilerplate

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - SwiftUI-MVVM-Boilerplate/.build
  - SwiftUI-MVVM-Boilerplate/Resources

# Adjust severity of rules
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
line_length: 120
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit)

# Customize rules
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string

function_body_length:
  warning: 60
  error: 100

file_length:
  warning: 500
  error: 1000

# rule configurations
nesting:
  type_level: 3

warning_threshold: 15 # number of warnings before swiftlint fails 